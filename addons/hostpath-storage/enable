#!/usr/bin/env bash

set -e

source $SNAP/actions/common/utils.sh
CURRENT_DIR=$(cd $(dirname "${BASH_SOURCE[0]}") && pwd)
source $CURRENT_DIR/../common/utils.sh

read -ra ARGUMENTS <<<"$1"

read -r key value <<<$(echo "${ARGUMENTS[@]}" | gawk -F "=" '{print $1 ,$2}')
read -ra RECLAIM_POLICY <<< "$value"

KEY_NAME="reclaim-policy"

declare -A allowed_reclaim_policies
for policy in Delete Retain
do
    allowed_reclaim_policies[$policy]=1
done

if [ ! -z "$key" ] && ([ "$key" != $KEY_NAME ] || [[ ! ${allowed_reclaim_policies[$value]} ]])
then
  echo ""
  echo "Please check submitted arguments."
  echo "You can use '$KEY_NAME' to set reclaim policy. Allowed values: "${!allowed_reclaim_policies[@]}". Defaults to 'Delete'."
  echo "   microk8s enable hostpath-storage:$KEY_NAME=Retain"
  exit 1
fi

echo "Enabling default storage class."
echo "WARNING: Hostpath storage is not suitable for production environments."
echo ""
run_with_sudo mkdir -p ${SNAP_COMMON}/default-storage

declare -A map
map[\$SNAP_COMMON]="$SNAP_COMMON"
map[\$RECLAIM_POLICY]="$RECLAIM_POLICY"

use_addon_manifest hostpath-storage/storage apply "$(declare -p map)"
echo "Storage will be available soon."

if [ -e ${SNAP_DATA}/var/lock/clustered.lock ]
then
  echo ""
  echo "WARNING: The storage class enabled does not persist volumes across nodes."
  echo ""
fi

echo ""
echo "You can use '$KEY_NAME' to set reclaim policy. Allowed values: "${!allowed_reclaim_policies[@]}". Defaults to 'Delete'."
echo "   microk8s enable hostpath-storage:$KEY_NAME=Retain"
